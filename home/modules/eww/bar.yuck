;;=================================================================;;
;;===================           Bar             ===================;;
;;=================================================================;;

(defwindow bar
:monitor 0
:exclusive true
:wm-ignore true
:stacking "bg"
:geometry (geometry :x "0px" :y "5px" :width "1900px" :height "28px" :anchor "top center")
        (widgets))

(defwidget widgets []
(box :space-evenly false :hexpand false :spacing 5 :class "bar"
        (widgets_left)
        (widgets_right)))

(defwidget widgets_left []
(box :orientation "h" :space-evenly false :hexpand true :spacing 5
        (workspace)
        (musictrl)
        (music)))

(defwidget widgets_right []
(box :orientation "h" :space-evenly false :hexpand false :spacing 5
        (metrics)
        (connection)
        (right)))

(defwidget right []
        (box :class "time" :orientation "h" :hexpand false
                (label :text "${time}" :tooltip "${timetip}")))

(defwidget metrics []
        (box :class "metrics" :hexpand true :space-evenly false :spacing 10
                (box :tooltip "Volume" :orientation "h" :hexpand true :space-evenly false
                        (revealer :reveal volnum :transition "slideright" :duration "700ms"
                          (label :class "vol" :text "${vols}")))
                (eventbox :onhoverlost "eww update volbar=false && eww update volnum=true" :onclick "eww update volbar=true && eww update volnum=false"
                        (box :orientation "h" :hexpand true :space-evenly false
                          (image :path "${vol}" :image-width 18 :image-height 18 :class "metricsicon")
                          (revealer :reveal volbar :transition "slideleft" :duration "700ms"
                                (box :orientation "h" :hexpand true :style "padding-left: 5px;" :space-evenly false
                                (scale :class "volbar" :min 0 :max 101 :value "${numvol}" :onchange "amixer sset Master {}% && sh ~/.config/hypr/scripts/brivolnotif.sh vol" :orientation "h")))))
                (box :tooltip "Brightness" :orientation "h" :hexpand true :space-evenly false
                        (revealer :reveal brinum :transition "slideright" :duration "700ms"
                        (label :class "brightnum" :text "${brightone}")))
                (eventbox :onhoverlost "eww update bribar=false && eww update brinum=true" :onclick "eww update bribar=true && eww update brinum=false"
                        (box :space-evenly false 
                          (image :path "img/lightbulb.svg" :image-width 17 :image-height 17 :class "metricsicon")
                          (revealer :reveal bribar :transition "slideleft" :duration "700ms"
                                (box :orientation "h" :hexpand true :style "padding-left: 5px;" :space-evenly false :spacing 10
                                (scale :class "bribar" :min 0 :max 101 :value "${brightone}" :onchange "brightnessctl set {}% && sh ~/.config/hypr/scripts/brivolnotif.sh bright" :orientation "h")))))
                (eventbox :onhover "eww update battstat=true" :onhoverlost "eww update battstat=false"
                        (box :space-evenly false :tooltip "Battery"
                          (image :path "${battstatus}" :image-width 18 :image-height 18 :class "metricsicon")
                          (revealer :reveal battstat :transition "slideleft" :duration "700ms"
                                (label :text "${battprcnt}%" :class "battprcnt"))))))

(defvar battstat false)

(defwidget connection []
        (box :class "wlanbox" :hexpand false :space-evenly false :spacing 15
                (button :class "wifi" :onclick "scripts/rofi-wifi-menu.sh" "${wifistat}")
                (label :class "bluez" :text "${bluez}")))

(defwidget musictrl []
        (box :class "msctrl" :spacing 20 :space-evenly true
                (button :onclick "playerctl previous" "" )
                (button :onclick "playerctl play-pause" "${playpause}" )
                (button :onclick "playerctl next" "")))

(defwidget music []
        (box :class "media" :orientation "h" :hexpand true
                (label :text "${getmedia}" :tooltip "${getmediafull}" :truncate true)))

(defwidget workspace []
        (box :class "workspace" :orientation "h" :hexpand false :space-evenly true
                (box
                (button :class "wsbutton" :style "${acws1}" :onclick "hyprctl dispatch workspace 1" "1"))
                (box
                (button :class "wsbutton" :style "${acws2}" :onclick "hyprctl dispatch workspace 2" "2"))
                (box
                (button :class "wsbutton" :style "${acws3}" :onclick "hyprctl dispatch workspace 3" "3"))
                (box
                (button :class "wsbutton" :style "${acws4}" :onclick "hyprctl dispatch workspace 4" "4"))))
